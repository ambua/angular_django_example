{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/blog_post.service.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {BlogPostService} from './blog_post.service';\nimport {UserService} from './user.service';\nimport {throwError} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n /**\n   * An object representing the user for the login form\n   */\n  public user: any;\n  /**\n   * An array of all the BlogPost objects from the API\n   */\n  public posts;\n\n  /**\n   * An object representing the data in the \"add\" form\n   */\n  public new_post: any;\n\n  constructor(private _blogPostService: BlogPostService, public _userService: UserService) { }\n\n  ngOnInit() {\n    this.user = {\n      username: '',\n      password: ''\n    };\n  }\n\n  login() {\n    this._userService.login({'username': this.user.username, 'password': this.user.password});\n  }\n\n  refreshToken() {\n    this._userService.refreshToken();\n  }\n\n  logout() {\n    this._userService.logout();\n  }\n\n    getPosts() {\n    this._blogPostService.list().subscribe(\n      // the first argument is a function which runs on success\n      data => {\n        this.posts = data;\n        // convert the dates to a nice format\n        for (let post of this.posts) {\n          post.date = new Date(post.date);\n        }\n      },\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => console.log('done loading posts')\n    );\n  }\n\n  createPost() {\n    this._blogPostService.create(this.new_post, this.user.token).subscribe(\n       data => {\n         // refresh the list\n         this.getPosts();\n         return true;\n       },\n       error => {\n         console.error('Error saving!');\n         return throwError(error);\n       }\n    );\n  }\n}\n","<h2>Log In</h2>\n<div class=\"row\" *ngIf=\"!_userService.token\">\n  <div class=\"col-sm-4\">\n    <label>Username:</label><br />\n    <input type=\"text\" name=\"login-username\" [(ngModel)]=\"user.username\">\n    <span *ngFor=\"let error of _userService.errors.username\"><br />{{ error }}</span>\n  </div>\n  <div class=\"col-sm-4\">\n    <label>Password:</label><br />\n    <input type=\"password\" name=\"login-password\" [(ngModel)]=\"user.password\">\n    <span *ngFor=\"let error of _userService.errors.password\"><br />{{ error }}</span>\n  </div>\n  <div class=\"col-sm-4\">\n    <button (click)=\"login()\" class=\"btn btn-primary\">Log In</button>\n  </div>\n  <div class=\"col-sm-12\">\n    <span *ngFor=\"let error of _userService.errors.non_field_errors\">{{ error }}<br /></span>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"_userService.token\">\n  <div class=\"col-sm-12\">You are logged in as {{ _userService.username }}.<br />\n    Token Expires: {{ _userService.token_expires }}<br />\n    <button (click)=\"refreshToken()\" class=\"btn btn-primary\">Refresh Token</button>\n    <button (click)=\"logout()\" class=\"btn btn-primary\">Log Out</button>\n  </div>\n</div>\n\n<h2 class=\"mt-3\">Micro Blog Posts</h2>\n<div *ngFor=\"let post of posts\">\n  <div class=\"row mb-3\">\n    <label class=\"col-md-2\">By:</label>\n    <div class=\"col-md-2 mb-1\">{{ post.user }}</div>\n    <label class=\"col-md-2\">Date:</label>\n    <div class=\"col-md-6\">{{ post.date }}</div>\n    <div class=\"col-md-12\">{{ post.body }}</div>\n  </div>\n</div>\n\n<h3>Create a new post:</h3>\n\n<div class=\"row mb-1\">\n  <label class=\"col-md-3\">Enter your post:</label>\n  <div class=\"col-md-9 mb-1\"><input type=\"text\" name=\"body\" [(ngModel)]=\"new_post.body\"></div>\n  <div class=\"col-md-2 offset-3\">\n    <button (click)=\"createPost()\" class=\"btn btn-primary\">Save</button>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';    // add this\nimport { FormsModule } from '@angular/forms';    // add this\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {BlogPostService} from './blog_post.service';\nimport { UserService } from './user.service';    // add this\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    UserService,\n    BlogPostService\n  ],    // add this\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserService} from './user.service';\n\n@Injectable()\nexport class BlogPostService {\n\n  constructor(private http: HttpClient, private _userService: UserService) { }\n\n  // Uses http.get() to load data from a single API endpoint\n  list() {\n    return this.http.get('/api/posts');\n  }\n\n  // send a POST request to the API to create a new data object\n  private httpOptions: { headers: HttpHeaders };\n  create(post, token) {\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + this._userService.token   // this is our token from the UserService (see Part 1)\n      })\n    };\n    return this.http.post('/api/posts', JSON.stringify(post), this.httpOptions);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable()\nexport class UserService {\n\n  // http options used for making API calls\n  private httpOptions: any;\n\n  // the actual JWT token\n  public token: string;\n\n  // the token expiration date\n  public token_expires: Date;\n\n  // the username of the logged in user\n  public username: string;\n\n  // error messages received from the login attempt\n  public errors: any = [];\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n  }\n\n  // Uses http.post() to get an auth token from djangorestframework-jwt endpoint\n  public login(user) {\n    this.http.post('/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  // Refreshes the JWT token, to extend the time the user is logged in\n  public refreshToken() {\n    this.http.post('/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n  }\n\n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n\n    // decode the token to read the username and expiration timestamp\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}